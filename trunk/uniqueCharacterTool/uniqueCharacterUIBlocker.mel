//# Character Interface 
//# ver 0.0.1
/***
changlog

0.0.0 
	使用iconTextButton做元素
0.0.1
	使用iconTextRadioButton

0.0.2 
	支持命令图标

0.0.3	
	宽度改为240

0.0.4 支持namescape，仅在创建interface的时候使用，从文件中读取数据的时候并不使用namescape，并且在执行过程中被叫做suffix


20080204
	更名unique Character UI Blocker
	所有的"Actor"都更名为"Character"
	
20080703
	改进UI
	加载角色控制块的时候，可以一次加载多个part
	修正了删除一个角色的控制块后不能再次添加的bug
	

***/


global proc ucuiBlockerSelector(string $name) {
	global string $ucuiBlockSelectType;
	global int $ucuiBlockManipType;
	
	string $cmd="select " + $ucuiBlockSelectType + "\""+$name+"\"";
	eval($cmd);
	
	if($ucuiBlockManipType==0) {
		global string $gSelect;
		setToolTo $gSelect;
		print "select";
	
	}
	else {
		global string $gTransform;
		setToolTo $gTransform;
	
	}
	

}
global proc ucuiSetSelectorType(string $type) {
	global string $ucuiBlockSelectType;
	$ucuiBlockSelectType=$type;

}

global proc ucuiSetManipType(int $type) {
	global int $ucuiBlockManipType;
	$ucuiBlockManipType=$type;

}

global proc createCharacterInterface( string $parentWidget ,string $nameScape, string $name ,string $characterParts, int $imgW, int $imgH){
	global string $userUCUIDataDir;
	global string $ucuiBlockSelectType;
	global int $ucuiBlockManipType;
	
	string $userUCUIDataPath=$userUCUIDataDir+"/";
	
	string $partList[];
	tokenize($characterParts , $partList);
	
	int $j;
	
	for($j=0;$j<`size $partList`;$j++){
		

		string $type=$partList[$j];
		
		string $uiBlock[];
		string $blockName[];
		string $mainpName[];
		string $objName;
		
		int $i=0;
		int $blockCoordX[];
		int $blockCoordY[];
		int $blockWidth[];
		int $blockHeight[];

		//read ui block data
			
		$blockDataFileName = ($userUCUIDataPath+$name+"_"+$type+"_block.txt");
		
		$fileID=`fopen $blockDataFileName "r"`;
		string $nextLine = `fgetline $fileID`;
	
		string $buffer[];
		tokenize($nextLine , $buffer);
		string $name=$buffer[0];
		string $type=$buffer[1];
		
	
		do {
			$nextLine = `fgetline $fileID`;
			if(size( $nextLine ) > 0){
				tokenize($nextLine , $buffer);
				
				$mainpName[$i]=$buffer[0];
				$blockName[$i]=$buffer[1];
				$blockCoordX[$i]=$buffer[2];
				$blockCoordY[$i]=$buffer[3];
				$blockWidth[$i]=$buffer[4];
				$blockHeight[$i]=$buffer[5];
				$i++;
			}
		} while (size( $nextLine ) > 0);
		fclose $fileID;
		

		//read cmd data

		$cmdDataFileName = ($userUCUIDataPath+$name+"_"+$type+"_cmd.txt");
		
		$fileID=`fopen $cmdDataFileName "r"`;
		string $nextLine = `fgetline $fileID`;
		string $bufferGeo;
		string $bufferCmd;

		string $blockCmdName[];
		string $blockUICmd[];
		
		int $i=0;
		
		int $blockCmdCoordX[];
		int $blockCmdCoordY[];
		int $blockCmdWidth[];
		int $blockCmdHeight[];
	
		do {
			$bufferGeo = `fgetline $fileID`;
			$bufferCmd = `fgetline $fileID`;
			if(size( $bufferGeo ) > 0 && size( $bufferCmd )){
			
				$blockUICmd[$i]=$bufferCmd;

				tokenize($bufferGeo , $buffer);

				$blockCmdName[$i]=$buffer[0];
				$blockCmdCoordX[$i]=$buffer[1];
				$blockCmdCoordY[$i]=$buffer[2];
				$blockCmdWidth[$i]=$buffer[3];
				$blockCmdHeight[$i]=$buffer[4];
				$i++;
			}
		} while (size( $bufferGeo ) > 0 && size( $bufferCmd ));
		fclose $fileID;


		//generate common ui backgound	
		
		string $interface_form = `formLayout -w $imgW -h $imgH -numberOfDivisions 240 -parent $parentWidget ($type+"Tab")`;
	
	
		//does not work
		//reloadImage ("/home/cobranail/maya/8.5/prefs/icons/"+$bgImage) $bgBlockImage;
		


		//begin to generate controller's iconRadioButton
		
		string $btnCollection=`iconTextRadioCollection`;
		
		for($i=0;$i<`size $blockName`;$i++){
	
	
			$objName=$mainpName[$i];		
	
			string $blockCmd="select -r \""+$nameScape+$objName+"\"";
			
			string $iconImage=($name+"_"+$type+"_"+$blockName[$i]+".xpm");
			string $iconImageActive=($name+"_"+$type+"_"+$blockName[$i]+"_Active.xpm");
			

			$uiBlock[$i]=`
				iconTextButton -w $blockWidth[$i] -h ($blockHeight[$i]+1) -mw 0 -mh 0 
					-style "iconOnly" -image1 $iconImage -image2 $iconImage -image3 $iconImage -label $blockName[$i] 
					-command ("ucuiBlockerSelector("+"\""+$nameScape+$objName+"\")")
			`;	
			
			//unfortunately, I must create block first, then generate status command , finally, attach the cmds to the block
			//iconTextButton -e -c ($irOnCmd+";"+$blockCmd) -ofc $irOffCmd $uiBlock[$i];
			
			formLayout -edit -w $imgW -h $imgH
			-attachForm $uiBlock[$i] "left"  ($blockCoordX[$i])
			-attachForm $uiBlock[$i] "top"  ($blockCoordY[$i])
			$interface_form;
			
			//does not work
			//reloadImage ("/home/cobranail/maya/8.5/prefs/icons/"+$name+"_"+$type+"_"+$blockName[$i]+".xpm") $uiBlock[$i];
			
		}
		
		
		//begin to generate command's iconButton
		
		setParent $interface_form;
		for($i=0;$i<`size $blockCmdName`;$i++){
	
	
			string $blockCmd=$blockUICmd[$i];
			
			string $iconImage=($name+"_"+$type+"_command_"+$blockCmdName[$i]+".xpm");
			string $iconImageActive=($name+"_"+$type+"_command_"+$blockCmdName[$i]+"_Active.xpm");
			

			$uiBlock[$i]=`
				iconTextButton -w $blockCmdWidth[$i] -h ($blockCmdHeight[$i]+1) 
					-style "iconOnly" -image $iconImage -image1 $iconImageActive -label $blockCmdName[$i] 
					-command $blockCmd 
			`;	
			
			formLayout -edit -w $imgW -h $imgH
			-attachForm $uiBlock[$i] "left"  ($blockCmdCoordX[$i])
			-attachForm $uiBlock[$i] "top"  ($blockCmdCoordY[$i])
			$interface_form;
	
			
		}
		
		
		// macosx fix: mac osx use a different way to render the UI, so I need to create bgimg behind the blocks.
		// and, radiobutton can not used, for they need 2 click to display the icon.
		// for all, it's very different to linux.

		iconTextButton -w 20 -h 20 -style "textOnly" -label "a" -command "ucuiSetSelectorType(\"-a\")" ucuiWidgetSelectorTypeA;
		iconTextButton -w 20 -h 20 -style "textOnly" -label "r" -command "ucuiSetSelectorType(\"-r\")" ucuiWidgetSelectorTypeR;
		iconTextButton -w 20 -h 20 -style "textOnly" -label "d" -command "ucuiSetSelectorType(\"-d\")" ucuiWidgetSelectorTypeD;
		iconTextButton -w 20 -h 20 -style "textOnly" -label "tgl" -command "ucuiSetSelectorType(\"-tgl\")" ucuiWidgetSelectorTypeT;

		iconTextButton -w 20 -h 20 -style "textOnly" -label "ka" -command "SetKey" ucuiWidgetKeyTypeKA;
		iconTextButton -w 20 -h 20 -style "textOnly" -label "kt" -command "SetKeyTranslate" ucuiWidgetKeyTypeKT;
		iconTextButton -w 20 -h 20 -style "textOnly" -label "kr" -command "SetKeyRotate" ucuiWidgetKeyTypeKR;
		iconTextButton -w 20 -h 20 -style "textOnly" -label "ks" -command "SetKeyScale" ucuiWidgetKeyTypeKS;

		iconTextButton -w 20 -h 20 -style "textOnly" -label "mS" -command "ucuiSetManipType(0)" ucuiWidgetManipTypeT;		
		iconTextButton -w 20 -h 20 -style "textOnly" -label "mT" -command "ucuiSetManipType(1)" ucuiWidgetManipTypeS;	
		
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetSelectorTypeT "right" 0 
			-attachForm ucuiWidgetSelectorTypeT "top" 1
			$interface_form;
			
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetSelectorTypeD "right" 20 
			-attachForm ucuiWidgetSelectorTypeD "top" 1
			$interface_form;
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetSelectorTypeR "right" 40 
			-attachForm ucuiWidgetSelectorTypeR "top" 1
			$interface_form;
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetSelectorTypeA "right" 60 
			-attachForm ucuiWidgetSelectorTypeA "top" 1
			$interface_form;


		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetManipTypeT "right" 0 
			-attachForm ucuiWidgetManipTypeT "top" 21
			$interface_form;
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetManipTypeS "right" 20 
			-attachForm ucuiWidgetManipTypeS "top" 21
			$interface_form;
			
			
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetKeyTypeKA "left" 0 
			-attachForm ucuiWidgetKeyTypeKA "top" 1
			$interface_form;
			
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetKeyTypeKT "left" 20 
			-attachForm ucuiWidgetKeyTypeKT "top" 1
			$interface_form;
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetKeyTypeKR "left" 40 
			-attachForm ucuiWidgetKeyTypeKR "top" 1
			$interface_form;
		formLayout -edit -w $imgW -h $imgH 
			-attachForm ucuiWidgetKeyTypeKS "left" 60 
			-attachForm ucuiWidgetKeyTypeKS "top" 1
			$interface_form;
					
			
		
		string $bgImage = ($name+"_"+$type+"_blockBackground.xpm");
		string $bgBlockImage = `picture -image $bgImage`;
		formLayout -edit -w $imgW -h $imgH
		-attachForm  $bgBlockImage  "top" 0
		-attachForm  $bgBlockImage  "left" 0
		$interface_form;
		
		clear $uiBlock;
		clear $blockName;
		clear $mainpName;
		clear $blockCmdName;
		clear $blockUICmd;
	
	}

}


global proc addCharacter(string $parentWidget , string $uCharUIBlockTabVar, string $nameScape, string $name, string $type){


	string $characterList[] = `optionMenuGrp -q -itemListShort $parentWidget`;
	int $nameExists = 0;
	string $buffer;
	for( $buffer in $characterList){
		string $longname=$nameScape+$name;
		if($longname == `menuItem -q -label $buffer` ) {
			$nameExists=1;
			print ($longname+" is in characterList. \n");
		}
	}


	if($nameExists==0){
		setParent $parentWidget; 
		//yes , have to sepParent , -parent doesnt work.
		
		string $menuCmd="replaceCharacterInterface( \""+$uCharUIBlockTabVar+"\" , \""+$nameScape+"\" , \""+$name+"\" , \""+$type+"\")";
		menuItem -label ($nameScape+$name) -command $menuCmd;
		
		//print ($menuCmd+"\n");
	
	
		selectCharacter($parentWidget); 
		//unlucky, I have to call this here, otherwise , first-load interface will not create.
	}

}


global proc removeCharacter(string $parentWidget, string $uCharUIBlockTabVar){
	
	string $characterList[] = `optionMenuGrp -q -itemListShort $parentWidget`;
	if(`size $characterList` > 1) {
		
		int $currentCharacter = `optionMenuGrp -q -select $parentWidget`-1;
		if($currentCharacter>=0) deleteUI $characterList[$currentCharacter];
		
		removeCharacterInterface(  $uCharUIBlockTabVar );
		if(`optionMenuGrp -q -numberOfItems $parentWidget` > 0){
	
			optionMenuGrp -e -select 1 $parentWidget;
	
			selectCharacter($parentWidget);
			//unlucky, I have to call this here, otherwise , character interface does not recreate.
		}

	}
} 


global proc selectCharacter(string $parentWidget){

	
	string $characterList[] = `optionMenuGrp -q -itemListShort $parentWidget`;
	int $currentCharacter = `optionMenuGrp -q -select $parentWidget` -1;
	if($currentCharacter<=0) $currentCharacter=0;
	string $menuCmd = `menuItem -q -command $characterList[$currentCharacter]`;
	eval($menuCmd);

}




global proc replaceCharacterInterface( string $uCharUIBlockTabVar, string $nameScape, string $name, string $type ){

	removeCharacterInterface(  $uCharUIBlockTabVar );

	createCharacterInterface( $uCharUIBlockTabVar ,$nameScape, $name, $type, 240,240);	
	
	
}

global proc removeCharacterInterface( string $uCharUIBlockTabVar){

	string	$tabChild[]= `tabLayout -q -childArray $uCharUIBlockTabVar`;
	int $i=0;
	while($i<`size $tabChild`){
		
		deleteUI $tabChild[$i];
		$i++;
	}
}


global proc promptAddCharaterDlg(){

	global string $uCharUIBlockCharListVar;
	global string $uCharUIBlockTabVar;	
	
	string $text;
	string $result = `promptDialog
	-title "load character"
	-message "name:"
	-text  "- Character body"
	-button "OK" -button "Cancel"
	-defaultButton "OK" -cancelButton "Cancel"
	-dismissString "Cancel"`;
	
	
	
	
	if ($result == "OK") {
		$text = `promptDialog -query -text`;
		
		  string $tokenizedList[];
		  tokenizeList($text, $tokenizedList);
		  if($tokenizedList[0]=="-") $tokenizedList[0]="";
		  if(`size $tokenizedList` >=3) {
			  int $i=2;
			  while($i<`size $tokenizedList`) {
			  
				  addCharacter($uCharUIBlockCharListVar , $uCharUIBlockTabVar, $tokenizedList[0] ,$tokenizedList[1], $tokenizedList[$i]);
				  
				  $i++;
			  }
		  }
		  
	}

	

}



global proc uniqueCharacterUIBlocker(){

global string $userUCUIDataDir;
$userUCUIDataDir=`getenv "HOME"`+ "/" + "ucData";
if(!`filetest -d $userUCUIDataDir`) sysFile -makeDir $userUCUIDataDir;



//string $xbmlangpath=`getenv XBMLANGPATH`;
//if(!`gmatch $xbmlangpath $userUCUIDataDir`) putenv "XBMLANGPATH" (`getenv XBMLANGPATH`+":"+$userUCUIDataDir);

//unfortunatly, XBMLANGPATH must be set in maya.env, if you set here, nothing helps, icons still coundn't be found.

	
global string $uCharUIBlockerWindowVar;
global string $uCharUIBlockCharListVar;
global string $uCharUIBlockTabVar;
global string $iw_prefix;
global string $iw_suffix;
global string $iw_type;
global string $ucuiBlockSelectType;
global int $ucuiBlockManipType;
$ucuiBlockSelectType="-r";
$ucuiBlockManipType=0;


if(`window  -exists "uniqueCharacterUIBlockerWindow"`) showWindow "uniqueCharacterUIBlockerWindow";


$uCharUIBlockerWindowVar=`window -sizeable false  -resizeToFitChildren true  -menuBar true -mbv true -title "Unique Character Blocker"  "uniqueCharacterUIBlockerWindow"`;
columnLayout -adjustableColumn true;
	menuBarLayout;
	    menu -label "Character Sets";
		menuItem -label "Load Character Sets";
		menuItem -label "Save Character Sets";
		menuItem -label "Close Window" -c "deleteUI uniqueCharacterUIBlockerWindow";
	    menu -label "Help";
		menuItem -label "About...";
	setParent ..;


	columnLayout -columnOffset "both" 3 -rowSpacing 8 -adjustableColumn true;

		$uCharUIBlockTabVar=`tabLayout -w 100 -h 100`;
		
		setParent ..;
		
		separator;
		
		frameLayout -label "Character" -borderStyle "out" -bv 0 -lv 0 -marginWidth 3 -cll 0;
				rowLayout -numberOfColumns 3 
						-columnWidth3 120 30 30 
						-adjustableColumn 1
						-columnAlign 1 "center"
						-columnAlign 2 "center"
						-columnAlign 2 "center"
						-columnAttach 1 "both"  0
						-columnAttach 2 "both"  0
						-columnAttach 3 "both"  0
						;
						
					$uCharUIBlockCharListVar=`
					optionMenuGrp -w 120 -label "Name"
					-columnWidth 1 40
					-columnWidth 2 80
					-columnAlign 1 "center" 
					-columnAlign 2 "center"
					-columnAttach 1 "both" 0
					-columnAttach 2 "both" 5
					-adjustableColumn 2
					-changeCommand "selectCharacter($uCharUIBlockCharListVar)" 
					"character_list"
					`;
					button -w 20 -l "add" -c "promptAddCharaterDlg()";
					button -w 20 -l "del" -c "removeCharacter($uCharUIBlockCharListVar , $uCharUIBlockTabVar)";
					
					
				setParent ..;
		setParent ..;
		
	setParent ..;
	
setParent ..;
showWindow $uCharUIBlockerWindowVar;

window -e -wh 100 100 $uCharUIBlockerWindowVar;

}
