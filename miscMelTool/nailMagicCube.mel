/***
nail Magic Cube

by Liu ShengJie (cobranail@gmail.com)
2008-01-15
***/

global proc nmc_createCubes(string $cubes[],int $c){
	
	float $n=$c-1;
	string $cube[];
	float $i=0,$j=0,$k=0;
	for($i=-$n/2;$i<=$n/2;$i+=1){
		for($j=-$n/2;$j<=$n/2;$j+=1){
			for($k=-$n/2;$k<=$n/2;$k+=1){
				$cube=`polyCube -ch 0`;
				move $i $j $k $cube;
				move 0 0 0 ($cube[0]+".rotatePivot");
				makeIdentity -apply true -t 1 -r 0 -s 0 -n 0 $cube[0]; 	
				$cubes[`size $cubes`]=$cube[0];	
				SetKeyRotate;
			}
		}
	}

	
}

global proc nmc_rotateCubes (string $cubeObj[],int $axis, int $dir, int $rframes, int $mode) {
	
	autoKeyframe -state true;
	
	
	string $selObj[]=`ls -sl -hd 1`;
	string $rotObj[];
	string $refObj=$selObj[0];
	float $refObjCoord[]=`objectCenter -gl $refObj`;
	float $rSetp=$dir*90.0/($rframes);
	string $obj;
	int $i;
	
	for($obj in $cubeObj) {
		
		float $ObjCoord[]=`objectCenter -gl $obj`;
		if(abs($ObjCoord[$axis]-$refObjCoord[$axis])<0.01) {
			$rotObj[`size $rotObj`]=$obj; 
		}
	}
	
	
	
	int $cf=`currentTime -q`;
	
	for($obj in $cubeObj) {
		select -add $obj;
	}
	SetKeyRotate;
	currentTime ($cf++);
	if($mode==0){ 
		for(;$rframes>0;$rframes--){
			currentTime ($cf++);
			select -cl;
			for($obj in $rotObj) {
				select -add $obj;
			}
			SetKeyRotate;
			
			$grp=`group`;
			if( $axis==0	){
				setAttr ($grp+".rx") $rSetp;
			}
			else if ($axis == 1){
				setAttr ($grp+".ry") $rSetp;
			}
			else{
				setAttr ($grp+".rz") $rSetp;
			}
			ungroup $grp;
		}
	}
	else {  // key mode 1, plz don't use this mode.
		// it has many rotation issues.
		
		for($i=2;$i>0;$i--){
			$cf=$cf+($rframes/2 - 1 );
			currentTime $cf;
			select -cl;
			for($obj in $rotObj) {
				select -add $obj;
			}
			SetKeyRotate;
			
			$grp=`group`;
			if( $axis==0	){
				setAttr ($grp+".rx") (45*$dir);
			}
			else if ($axis == 1){
				setAttr ($grp+".ry") (45*$dir);
			}
			else{
				setAttr ($grp+".rz") (45*$dir);
			}
			ungroup $grp;
		}
		
		$cf++;
		currentTime $cf;
		
	}
	
	for($obj in $cubeObj) {
		select -add $obj;
	}
	SetKeyRotate;
	select -r $refObj;
}

global proc nailMagicCube(){

global string $nmc_cubes[];
	
if(`window -exists "nailMagicCubeWindow"`) showWindow nailMagicCubeWindow;
else {
	


	window -rtf 1 -title "cobranail's Magic Cubes" nailMagicCubeWindow;
		frameLayout -mw 3 -mh 3 -lv 0 -bv 0;
			columnLayout -rs 3 -adj 1;
				intSliderGrp -label "grid" -field true
					-minValue 2 -maxValue 10
					-fieldMinValue 2 -fieldMaxValue 10
					-value 4 nailMagicCubeGridWidget;
				separator;
				button -l "Create Cubes" -c "nmc_createCubes($nmc_cubes,`intSliderGrp -q -value nailMagicCubeGridWidget`);";
				
				separator -h 10;
				
				intSliderGrp -label "frames" -field true
					-minValue 3 -maxValue 240
					-fieldMinValue 3 -fieldMaxValue 240
					-value 24 nailMagicCubeFramesWidget;
				intSliderGrp -label "key mode" -field true
					-minValue 0 -maxValue 0
					-fieldMinValue 0 -fieldMaxValue 0
					-value 0 nailMagicCubeModeWidget;					
				separator -h 5;
				button -l "X + 90" -c "nmc_rotateCubes ($nmc_cubes,0, 1, `intSliderGrp -q -value nailMagicCubeFramesWidget`, `intSliderGrp -q -value nailMagicCubeModeWidget`)";
				button -l "X - 90" -c "nmc_rotateCubes ($nmc_cubes,0, -1, `intSliderGrp -q -value nailMagicCubeFramesWidget`, `intSliderGrp -q -value nailMagicCubeModeWidget`)";
				separator -h 2;
				button -l "Y + 90" -c "nmc_rotateCubes ($nmc_cubes,1, 1, `intSliderGrp -q -value nailMagicCubeFramesWidget`, `intSliderGrp -q -value nailMagicCubeModeWidget`)";
				button -l "Y - 90" -c "nmc_rotateCubes ($nmc_cubes,1, -1, `intSliderGrp -q -value nailMagicCubeFramesWidget`, `intSliderGrp -q -value nailMagicCubeModeWidget`)";
				separator -h 2;
				button -l "Z + 90" -c "nmc_rotateCubes ($nmc_cubes,2, 1, `intSliderGrp -q -value nailMagicCubeFramesWidget`, `intSliderGrp -q -value nailMagicCubeModeWidget`)";
				button -l "Z - 90" -c "nmc_rotateCubes ($nmc_cubes,2, -1, `intSliderGrp -q -value nailMagicCubeFramesWidget`, `intSliderGrp -q -value nailMagicCubeModeWidget`)";
	
	
	window -e -wh 100 100 nailMagicCubeWindow;
	showWindow;
}
	
}

